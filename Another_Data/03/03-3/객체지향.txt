C언어는 절차지향적 언어
C++은 객체지향적 언어

객체 = "Object" = "사물 또는 대상"

객체지향 프로그래밍은 현실에 존재하는 사물과 대상, 그리고 그에 따른 행동을
있는 그대로 실체화 시키는 형태의 프로그래밍이다.

예로 "나는 과일장수에게 두 개의 사과를 구매했다." 에서
객체는 나(me), 과일장수, 사과이며
객체지향프로그래밍은 객체를 등장시킬 수 있을 뿐 더러,
'나'라는 객체가 '과일장수'라는 개체로부터 '과일'객체를 구매하는 행위도 표현할 수 있다.

결국 함수는 객체의 행동이며

객체는 하나 이상의 상태 정보(데이터)와 하나 이상의 행동(기능)으로 구성

클래스의 멤버변수 선언문에서 초기화 하는 것은 허용하지 않는다.(파이썬은 가능)

상수는 선언과 동시에 초기화되어야 한다.

사과의 판매가격은 일정하지만 현재 우리로써는 APPLE_PRICE를 상수로 선언할 방법이 없다.

buyer.BuyApples(seller, 2000); // 과일의 구매!

" '나'라는 객체가 '과일장수'라는 객체로부터 '과일'객체를 구매하는 행위도 그대로 표현할 수 있다.

즉, FruitSaleSim1.cpp의 45행은 FruitBuyer객체가 FruitSeller 객체에게 위와 같은 메시지를 전달하는 상황이다.

"seller 아저씨, 사과 2,000원어치 주세요"


이처럼 하나의 객체가 다른 하나의 객체에게 메시지를 전달하는 방법은
(어떠한 행위의 요구를 위한 메시지 전달) 함수 호출을 기반으로 한다.
그래서 객체지향에서는 이러한 형태의 함수호출을 가리켜 메시지전달(Message Passing)이라 한다.
